# This is for adding Kubernetes Annotations to a Deployment.
annotations:
  branch: ""
  commit: ""
  deployedBy: ""
  time: ""

affinity: {}

auth:
  # Workload identity configuration
  workloadIdentity:
    clientId: ""

autoscaling:
  enabled: false
  maxReplicas: 5
  minReplicas: 1
  targetCPUUtilizationPercentage: 80

command: ""

configMap:
  data: {}
    # KEY: VALUE
  enabled: true

env:
  - name: EXAMPLE_ENV
    value: "default"

image:
  pullPolicy: IfNotPresent
  repository: nginx
  tag: latest

ingress:
  annotations: {}
  className: ""
  enabled: false
  hosts:
    - host: example.local
      paths:
        - path: /
          pathType: Prefix
  tls: []

livenessProbe:
  httpGet:
    path: /healthz/live
    port: http
  initialDelaySeconds: 10
  periodSeconds: 5

nodeSelector: {}

pdb:
  maxUnavailable: null
  minAvailable: null

podAnnotations: {}

podLabels: {}

podSecurityContext:
  fsGroup: 1654

readinessProbe:
  httpGet:
    path: /healthz/ready
    port: http
  initialDelaySeconds: 10
  periodSeconds: 5

replicaCount: 2

resources: {}
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

securityContext:
  allowPrivilegeEscalation: false
  capabilities:
    drop:
      - ALL
  readOnlyRootFilesystem: true
  runAsNonRoot: true
  runAsUser: 1654
  seccompProfile:
    type: RuntimeDefault
  # If you need somewhere to write files, mount it as an emptydir mount https://kubernetes.io/docs/concepts/storage/volumes/#emptydir

service:
  port: 80
  targetPort: http
  type: ClusterIP

serviceAccount:
  annotations: {}
  create: true
  name: ""

tolerations: []

volumeMounts: []

volumes: []